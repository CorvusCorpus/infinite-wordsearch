body {
  background-color: #222;
  color: white;
  font-family: sans-serif;
  text-align: center;
  margin: 0;
  padding: 0;
  background: radial-gradient(circle at center, #444, #111);
}

#gameCanvas {
  border: 2px solid #666;
  border-radius: 8px;
  
}
.tile:hover {
  background: rgba(255, 255, 255, 0.1);
}

canvas {
  width: 90vw;           /* use viewport width */
  max-width: 600px;      /* cap for desktop */
  height: auto;
  display: block;
  margin: 0 auto;
  margin-top: 20px;
}

#currentWord {
  margin-top: 10px;
  font-size: 1.5rem;
  color: #ffb;
}
#wordText {
  font-weight: bold;
  color: #fff;
}
#dictionaryCount {
  font-weight: bold;
  color: #fff;
}
#hud {
  margin-top: 15px;
  color: #fff;
  font-family: sans-serif;
  font-size: 1.2rem;
}
#score {
  margin-top: 8px;
  color: #ffb;
}

.flash {
  filter: brightness(1.5);
  transition: filter 0.15s ease;
}

#wordPopups {
  position: relative;
  width: 100%;
  height: 0;
  pointer-events: none; /* so it doesn't block mouse input */
}

.wordPopup {
  position: absolute;
  left: 50%;
  transform: translateX(-50%) scale(1);
  font-family: "Segoe UI", Roboto, sans-serif;
  font-size: 1.6rem;
  font-weight: bold;
  color: #ffffff;
  text-shadow: 0 0 10px rgba(255, 255, 255, 0.8);
  opacity: 0;
  animation: popupFloat 1.5s ease-out forwards;
  pointer-events: none;
}

.wordPopup.newWord {
  color: #16ce78;
  text-shadow: 0 0 12px rgba(0, 200, 100, 0.9);
}

.wordPopup.invalidWord {
  color: #ff3b3b;
  text-shadow: 0 0 10px #aa3b3b;
}

@keyframes popupFloat {
  0% {
    transform: translate(-50%, 0) scale(1.2);
    opacity: 0;
  }
  10% {
    opacity: 1;
    transform: translate(-50%, -5px) scale(1);
  }
  60% {
    transform: translate(-50%, -25px) scale(1);
    opacity: 1;
  }
  100% {
    transform: translate(-50%, -60px) scale(0.9);
    opacity: 0;
  }
}

/* Center the canvas in the viewport */
#gameWrapper {
  position: relative; /* needed for absolute positioning of dictionary */
  width: 100%;
  display: flex;
  justify-content: center; /* center the canvas horizontally */
  margin-top: 0px; /* optional top offset */
}

/* The dictionary is positioned relative to the canvas */
#dictionaryContainer {
  position: absolute;
  left: calc(50% + 300px); /* 50% = canvas center, 300px = half canvas width + margin */
  top: 20px; /* top aligned with canvas */
  width: 300px;
  max-height: 580px; /* same as canvas height */
  overflow-y: auto;
  border: 2px solid #666;
  border-radius: 8px;
  background-color: #111;
  padding: 10px;
  color: #fff;
}

#dictionaryHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 10px;
}

#dictionaryHeader button {
  background-color: #333;
  border: 1px solid #fff;
  color: #fff;
  cursor: pointer;
  padding: 2px 6px;
  font-size: 0.9rem;
}

#dictionaryList div {
  padding: 2px 0;
}

.dictionaryEntry {
  display: flex;
  justify-content: space-between; /* word left, score right */
  padding: 2px 0;
  border-bottom: 1px solid rgba(255,255,255,0.1); /* optional separator */
}

.wordText {
  text-align: left;
}

.scoreText {
  text-align: right;
}

#shuffleContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  margin-top: 10px;
}

#shuffleBarOuter {
  width: 600px;
  height: 16px;
  border: 2px solid #ddd;
  background-color: #333;
  border-radius: 10px;
  overflow: hidden;
  margin-bottom: 6px;
  cursor: not-allowed; /* default disabled state */
  position: relative;
  user-select: none;
}
 
#shuffleBarOuter.ready {
  cursor: pointer;
  box-shadow: 0 0 8px 2px #2ecc71;
  animation: pulse 1s infinite alternate;
}

@keyframes pulse {
  from { box-shadow: 0 0 2px 2px #2ecc71; }
  to { box-shadow: 0 0 4px 4px #2ecc71; }
}

/* label centered on the bar */
#shuffleLabel {
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  color: #fff;
  font-weight: bold;
  border-color: #777;
  top: 7px;
  font-size: 0.9rem;
  pointer-events: none;
  white-space: nowrap;
}

#shuffleBarInner {
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 0%;                   /* set dynamically in JS */
  background: linear-gradient(90deg, #0e6c71, #27ae60);
  border-radius: 0;            /* no rounding needed â€” overflow handles it */
  transition: width 0.4s ease-out;
}

#resetConfirm {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.6);
  display: flex;
  align-items: center;
  justify-content: center;
}
#resetConfirm.hidden { display: none; }
.modal {
  background: #222;
  padding: 20px;
  border-radius: 10px;
  text-align: center;
  color: white;
}
.modal button {
  margin: 10px;
}
#resetButton {
  background: #222;
  color: #ddd;
  border: 1px solid #555;
  border-radius: 80px;
  padding: 6px 12px;
  margin-top: 12px;
}
#resetButton:hover {
  background: #c0392b;
  color: white;
}

#toggleOrder {
  background: #222;
  color: #eee;
  border: 1px solid #444;
  border-radius: 6px;
  padding: 3px 8px;
  cursor: pointer;
}
#toggleOrder:hover {
  background: #333;
}

@media (max-width: 768px) {
  #layoutWrapper {
    flex-direction: column;
    align-items: center;
  }
  #dictionaryContainer {
    margin-top: 20px;
  }
}